<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.min.section01.xml.MenuMapper">
    <resultMap type="com.min.section01.xml.MenuDTO" id="menuResultMap">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!-- 설명 :
          single quotation(’ ’) 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은
          객체의 필드 또는 변수명으로 인식하게 작성하는 기법이다.

         설명 : OGLN의 종류
            1. gte (>=) : greater than equal
            2. gt (>) : greater than
            3. lte (<=) : less than equal
            4. lt (<) : less than
            5. eq (==) : equal
            6. neq (!=) : not equal -->

    <!-- memo : id는 MenuMapper 인터페이스의 메소드명과 일치해야 한다.-->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        SELECT
        <!-- memo : resultMap 과 순서를 맞춰줘야 한다. -->
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="maxPrice gte 0 and maxPrice lte 10000">
            <![CDATA[
            AND A.MENU_PRICE < #{maxPrice}
            ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{maxPrice}
        </if>
    </select>

    <!-- memo : MenuMapper searchMenu 메소드와 id 일치 -->
    <select id="searchMenu" parameterType="com.min.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{value}
        </if>
        ORDER BY 1 DESC
    </select>

    <!-- memo : main 2번 선택지 - 1번 서브메뉴 -->
    <select id="searchMenuBySupCategory" parameterType="com.min.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value eq '식사'">
                AND A.CATEGORY_CODE IN (4, 5, 6, 7)
            </when>

            <when test="value eq '음료'">
                AND A.CATEGORY_CODE IN (8, 9, 10)
            </when>

            <when test="value == '디저트'">
                AND A.CATEGORY_CODE IN (11, 12)
            </when>
        </choose>
    </select>

    <select id="searchMenuByRandomMenuCode" parameterType="list" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.MENU_CODE IN
        <foreach collection="list"
                 item="menuCode" open="(" close=")" separator=", ">
            #{menuCode}
        </foreach>
    </select>
</mapper>